name: Build and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP12-A15"
  BRANCH: "android13-5.15"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Free disk space
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip \
            curl \
            git \
            zip \
            unzip \
            gcc \
            g++ \
            make \
            ninja-build \
            file \
            bc \
            bison \
            flex \
            libssl-dev \
            libelf-dev \
            wget \
            build-essential \
            python3-dev \
            python3-setuptools \
            rsync \
            ccache

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G

      - name: Install Latest Pahole
        run: |
          sudo apt-get remove --purge -y dwarves
          sudo apt-get install -y git build-essential libdw-dev zlib1g-dev
          git clone --recurse-submodules https://git.kernel.org/pub/scm/devel/pahole/pahole.git
          cd pahole
          cmake .
          sudo make install

      - name: Debug Directory Structure (Post-Sync)
        run: |
          echo "Debugging directory structure..."
          find ./kernel_platform/oneplus12_v/ || echo "kernel_platform directory not found"
          find ./vendor || echo "vendor directory not found"

      - name: Validate Required Files
        run: |
          echo "Validating required files..."
          REQUIRED_FILES=(
              "./kernel_platform/oplus/build/oplus_setup.sh"
              "./vendor/oplus/kernel/prebuilt/vendorsetup.sh"
              "./kernel_platform/build/android/prepare_vendor.sh"
          )
          for FILE in "${REQUIRED_FILES[@]}"; do
              if [ ! -f "$FILE" ]; then
                  echo "Error: Missing $FILE"
                  exit 1
              fi
          done

      - name: Add Dummy Variables to Script
        run: |
          echo "Adding dummy variables to prevent undefined errors..."
          sed -i '/build_start_time=/d' ./oplus/build/oplus_build_kernel.sh
          sed -i '/build_end_time=/d' ./oplus/build/oplus_build_kernel.sh
          echo "build_start_time=\$(date +%s)" >> ./oplus/build/oplus_build_kernel.sh
          echo "build_end_time=\$(date +%s)" >> ./oplus/build/oplus_build_kernel.sh

      - name: Debugging Mode in Kernel Build Script
        run: |
          echo "Enabling debug mode for oplus_build_kernel.sh..."
          sed -i '1s|^|set -x\n|' ./oplus/build/oplus_build_kernel.sh

      - name: Continue with Build Process
        run: |
          echo "Proceeding with build..."
          ./oplus/build/oplus_build_kernel.sh kalama gki -o "$(pwd)/out"

      - name: Debug Working Directory
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/out/dist
        run: |
          pwd
          ls -l

      - name: Create ZIP Package
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          cp kernel_platform/oneplus12_v/kernel_platform/out/dist/Image AnyKernel3/Image
          cp kernel_platform/oneplus12_v/kernel_platform/out/dist/Image.lz4 AnyKernel3/Image.lz4
          cd AnyKernel3  # Move to AnyKernel3 directory
          ZIP_NAME="Anykernel3-OP-A15-android14-6.1-KernelSUNext-SUSFS-$(date +'%Y-%m-%d-%H-%M-%S').zip"
          echo "Creating zip file $ZIP_NAME..."
          zip -r "../$ZIP_NAME" ./*
          ls -lh "../$ZIP_NAME"
          echo "zip_name=$ZIP_NAME" >> $GITHUB_ENV

      - name: Publish Release
        run: |
          cd "./builds/${{ env.ROOT_DIR }}"
          echo "ZIP_NAME: ${{ env.zip_name }}"
          ZIP_FILE_PATH="${GITHUB_WORKSPACE}/builds/${{ env.ROOT_DIR }}/${{ env.zip_name }}"
          echo "ZIP_FILE_PATH: $ZIP_FILE_PATH"
          if [ -f "$ZIP_FILE_PATH" ]; then
              echo "ZIP file found: $ZIP_FILE_PATH"
          else
              echo "Error: ZIP file not found at $ZIP_FILE_PATH!"
              exit 1
          fi
          REPO_NAME=${REPO_NAME:-$GITHUB_REPOSITORY}
          gh release create "v${{ env.BRANCH }}-$(date +'%Y.%m.%d-%H%M%S')" "$ZIP_FILE_PATH" \
            --repo "$REPO_NAME" \
            --title "OP12 A15 ${{ env.BRANCH }} With KernelSU & SUSFS" \
            --notes "Kernel release" \
            --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: |
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/out/*.log
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/**/*.rej
          retention-days: 5
